<?xml version="1.0" encoding="UTF-8"?>
<!-- February 27, 2012 -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.telefonica.com/schemas/UNICA/REST/common/v2" targetNamespace="http://www.telefonica.com/schemas/UNICA/REST/common/v2" elementFormDefault="qualified">
  
    <xsd:complexType name="AddressType">
        <xsd:annotation>
            <xsd:documentation>Base information for an Address, abstract type</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="street" type="xsd:string" minOccurs="0"/>
            <xsd:element name="streetNumber" type="xsd:unsignedInt" minOccurs="0"/>
            <xsd:element name="locality" type="xsd:string" minOccurs="0"/>
            <xsd:element name="region" type="xsd:string" minOccurs="0"/>
            <xsd:element name="postalCode" type="xsd:unsignedInt" minOccurs="0"/>
            <xsd:element name="country" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:simpleType name="E164Type">
        <xsd:annotation>
            <xsd:documentation>A phone number following the E164 format. An optional "+" sign followed by a set of digits</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="\+?[0-9]+"/>
        </xsd:restriction>
    </xsd:simpleType>  
    
    <xsd:simpleType name="EmailAddressType">
        <xsd:annotation>
            <xsd:documentation>Userâ€™s e-mail address</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value=".+@.+\..+"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    
    <xsd:complexType name="ExtensionType">
        <xsd:sequence>
            <xsd:any namespace="##any" processContents="lax" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute/>
    </xsd:complexType>
    
    <xsd:simpleType name="FlagType">
        <xsd:annotation>
            <xsd:documentation>Generic yes/no flag</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="yes"/>
            <xsd:enumeration value="no"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="GenderType">
        <xsd:annotation>
            <xsd:documentation>List of possible gender values</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="male"/>
            <xsd:enumeration value="female"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ImeiType">
        <xsd:annotation>
            <xsd:documentation>IMEI and IMEI/SV format</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[0-9]{2}-[0-9]{6}-[0-9]{6}-[0-9]{1,2}"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ImsiType">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[0-9]{6,15}"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:complexType name="IpAddressType">
        <xsd:annotation>
            <xsd:documentation>A generic IP address, including both v4 and v6
				address formats</xsd:documentation>
        </xsd:annotation>
        <xsd:choice>
            <xsd:element name="ipv4" type="tns:Ipv4AddressType"/>
            <xsd:element name="ipv6" type="tns:Ipv6AddressType"/>
        </xsd:choice>
    </xsd:complexType>
    
    <xsd:simpleType name="Ipv4AddressType">
        <xsd:annotation>
            <xsd:documentation>An IPv4 address</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="((0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0-5]?)|([6-9]?)))|([3-9][0-9]?))\.){3}(0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0-5]?)|([6-9]?)))|([3-9][0-9]?))"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="Ipv6AddressType">
        <xsd:annotation>
            <xsd:documentation>An IPv6 address</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?"/>
        </xsd:restriction>
    </xsd:simpleType>    
    
    <xsd:complexType name="NameValuePairType">
        <xsd:annotation>
            <xsd:documentation>Generic name-value pair</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="OtherIdType">
        <xsd:annotation>
            <xsd:documentation>Extended type for additional user identifiers
			</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>    
    
    <xsd:simpleType name="SipUriType">
        <xsd:annotation>
            <xsd:documentation>SIP URI format according to RFC 3261
			</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="sip:.+@.+"/>
        </xsd:restriction>
    </xsd:simpleType>
  
   	<xsd:complexType name="TimeZoneType">
		<xsd:annotation><xsd:documentation>
		Timezones shall be referred to timezone schemas or timezone databases using the tzDatabase attribute.
		The default timezone database is Olson		 
		</xsd:documentation></xsd:annotation>	
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
			<xsd:attribute name="tzDatabase" 
            					type="xsd:string"
            					default="Olson"/>            
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	
    <xsd:simpleType name="TelUriType">
        <xsd:annotation>
            <xsd:documentation>Tel URI for Telephone Numbers according to RFC
				3966, based on a simplified regular expression. A complete regular
				expression matching Tel URI format is too complicated and probably
				is difficult to be matched during automatic schema checking
			</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="tel:.+"/>
        </xsd:restriction>
    </xsd:simpleType>   
    
    

     <xsd:complexType name="SimpleReferenceType">
        <xsd:annotation>
            <xsd:documentation>As a general rule use just anyURI as url</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="endpoint" type="xsd:anyURI"/>
            <xsd:element name="interfaceName" type="xsd:string"/>
            <xsd:element name="correlator" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>   
    
    <xsd:complexType name="ExceptionType">
        <xsd:annotation>
            <xsd:documentation>Returned by server in case of a fault</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="exceptionId" type="xsd:string"/>              
            <xsd:element name="exceptionText" type="xsd:string"/>
            <xsd:element name="moreInfo" type="xsd:anyURI" minOccurs="0"/>
            <xsd:element name="userMessage" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>        
    
    
    <!-- The following are elements defining faults-->
    
    <xsd:element name="exception" type="tns:ExceptionType"/>


    
</xsd:schema>
