//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.09 at 09:17:46 AM CEST 
//


package com.telefonica.schemas.unica.soap.charging.v1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ChargeTypeTypes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ChargeTypeTypes">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="PerServiceConsumption"/>
 *     &lt;enumeration value="BalancePayment"/>
 *     &lt;enumeration value="BalanceRefund"/>
 *     &lt;enumeration value="BalanceOverdue"/>
 *     &lt;enumeration value="ExternalBalanceMigration"/>
 *     &lt;enumeration value="ServiceRefund"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ChargeTypeTypes")
@XmlEnum
public enum ChargeTypeTypes {

    @XmlEnumValue("PerServiceConsumption")
    PER_SERVICE_CONSUMPTION("PerServiceConsumption"),
    @XmlEnumValue("BalancePayment")
    BALANCE_PAYMENT("BalancePayment"),
    @XmlEnumValue("BalanceRefund")
    BALANCE_REFUND("BalanceRefund"),
    @XmlEnumValue("BalanceOverdue")
    BALANCE_OVERDUE("BalanceOverdue"),
    @XmlEnumValue("ExternalBalanceMigration")
    EXTERNAL_BALANCE_MIGRATION("ExternalBalanceMigration"),
    @XmlEnumValue("ServiceRefund")
    SERVICE_REFUND("ServiceRefund");
    private final String value;

    ChargeTypeTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ChargeTypeTypes fromValue(String v) {
        for (ChargeTypeTypes c: ChargeTypeTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
