<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:tns="http://www.telefonica.com/schemas/UNICA/SOAP/common/v1"
	targetNamespace="http://www.telefonica.com/schemas/UNICA/SOAP/common/v1"
	elementFormDefault="qualified">

	<xsd:complexType name="AddressType">
		<xsd:annotation>
			<xsd:documentation>Information of the user’s address</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="street" type="xsd:string" />
			<xsd:element name="streetNumber" type="xsd:unsignedInt" />
			<xsd:element name="locality" type="xsd:string" />
			<xsd:element name="region" type="xsd:string" />
			<xsd:element name="postalCode" type="xsd:unsignedInt" />
			<xsd:element name="country" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="EmailAddressType">
		<xsd:annotation>
			<xsd:documentation>User’s e-mail address</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value=".+@.+\..+" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="FlagType">
		<xsd:annotation>
			<xsd:documentation>Generic yes/no flag</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="yes" />
			<xsd:enumeration value="no" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="FilterParamsType">
		<xsd:annotation>
			<xsd:documentation>Sequence of simple general string parameters, to
				be used as filter criteria in requests. Parameter. Multiplicity may be greater than 1 (multiple filtering fields)</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="fields" type="xsd:string" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="GenderType">
		<xsd:annotation>
			<xsd:documentation>List of possible gender values</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="male" />
			<xsd:enumeration value="female" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="ImeiType">
		<xsd:annotation>
			<xsd:documentation>IMEI and IMEI/SV format</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{2}-[0-9]{6}-[0-9]{6}-[0-9]{1,2}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="ImsiType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]+" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="NameValuePairType">
		<xsd:annotation>
			<xsd:documentation>Generic name-value pair</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="value" type="xsd:string" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="SearchParamsType">
		<xsd:annotation>
			<xsd:documentation>Generic sequence of name-value pairs, to be used
				in searches</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="param" type="tns:NameValuePairType"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="SipUriType">
		<xsd:annotation>
			<xsd:documentation>SIP URI format according to RFC 3261
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="sip:.+@.+" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="TimestampType">
		<xsd:restriction base="xsd:dateTime" />
	</xsd:simpleType>

	<xsd:simpleType name="TelUriType">
		<xsd:annotation>
			<xsd:documentation>Tel URI for Telephone Numbers according to RFC
				3966, based on a simplified regular expression. A complete regular
				expression matching Tel URI format is too complicated and probably
				is difficult to be matched during automatic schema checking
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="tel:.+" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="UserIdType">
		<xsd:choice>
			<xsd:element name="phoneNumber" type="tns:E164Type" />
			<xsd:element name="anyUri" type="xsd:anyURI" />
			<xsd:element name="ipAddress" type="tns:IpAddressType" />
			<xsd:element name="alias" type="tns:AliasType" />
			<xsd:element name="otherId" type="tns:OtherIdType" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:simpleType name="E164Type">
		<xsd:annotation>
			<xsd:documentation>A phone number. Is a maximum of 15 digits
				following the E164 format</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]+" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="IpAddressType">
		<xsd:annotation>
			<xsd:documentation>A generic IP address, including both v4 and v6
				address formats</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="ipv4" type="tns:Ipv4AddressType" />
			<xsd:element name="ipv6" type="tns:Ipv6AddressType" />
		</xsd:choice>
	</xsd:complexType>

	<xsd:simpleType name="Ipv4AddressType">
		<xsd:annotation>
			<xsd:documentation>An IPv4 address</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern
				value="((0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0-5]?)|([6-9]?)))|([3-9][0-9]?))\.){3}(0|(1[0-9]{0,2})|(2(([0-4][0-9]?)|(5[0-5]?)|([6-9]?)))|([3-9][0-9]?))" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="Ipv6AddressType">
		<xsd:annotation>
			<xsd:documentation>An IPv6 address</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern
				value="(([0-9a-fA-F]+:){7}[0-9a-fA-F]+)|(([0-9a-fA-F]+:)*[0-9a-fA-F]+)?::(([0-9a-fA-F]+:)*[0-9a-fA-F]+)?" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="AliasType">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<xsd:complexType name="OtherIdType">
		<xsd:annotation>
			<xsd:documentation>Extended type for additional user identifiers
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="type" type="xsd:string" />
			<xsd:element name="value" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	    <xsd:complexType name="ClientExceptionType">
        <xsd:annotation>
            <xsd:documentation>Returned by server in case of Client related faults</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="exceptionCategory">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="SVC"/>
                        <xsd:enumeration value="POL"/>
                        <xsd:enumeration value="SEC"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="exceptionId">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:int">
                        <xsd:minInclusive value="0000"/>
                        <xsd:maxInclusive value="9999"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="text" type="xsd:string"/>
            <xsd:element name="variables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

	<xsd:complexType name="ServerExceptionType">
        <xsd:annotation>
            <xsd:documentation>Object returned by server in case of Server related faults</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="exceptionCategory">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="SVR"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="exceptionId" type="xsd:int"/>
            <xsd:element name="text" type="xsd:string"/>
            <xsd:element name="variables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

	<xsd:complexType name="SimpleReferenceType">
		<xsd:annotation>
			<xsd:documentation>For those services that require a reference to a
				Web Service, the information required to create the endpoint
				information is contained in this type</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="endpoint" type="xsd:anyURI" />
			<xsd:element name="interfaceName" type="xsd:string" />
			<xsd:element name="correlator" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>


	<xsd:complexType name="ExtensionType">
		<xsd:sequence>
			<xsd:any processContents="lax" minOccurs="1" maxOccurs="unbounded"
				namespace="##any" />
		</xsd:sequence>
		<xsd:anyAttribute/>
	</xsd:complexType>
	
</xsd:schema>